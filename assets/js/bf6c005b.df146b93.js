"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[224],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,g=d["".concat(o,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(g,s(s({ref:t},p),{},{components:n})):a.createElement(g,s({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[d]="string"==typeof e?e:r,s[1]=l;for(var u=2;u<i;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7508:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:4},s="Langages et syst\xe8mes informatiques",l={unversionedId:"developpement-dun-projet-it/langages-et-systemes",id:"developpement-dun-projet-it/langages-et-systemes",title:"Langages et syst\xe8mes informatiques",description:"Les syst\xe8mes et les langages informatiques sont les mat\xe9riaux de base de la construction d'un b\xe2timent, car ils viennent litt\xe9ralement supporter la mise en oeuvre de votre \xe9difice. Chaque ligne de code produite viendra augmenter les fonctionnalit\xe9s de votre application ou par analogie, la taille de votre immeuble.",source:"@site/docs/developpement-dun-projet-it/langages-et-systemes.md",sourceDirName:"developpement-dun-projet-it",slug:"/developpement-dun-projet-it/langages-et-systemes",permalink:"/developpement-dun-projet-it/langages-et-systemes",draft:!1,editUrl:"https://github.com/diplomegalo/diplomegalo.github.io/docs/developpement-dun-projet-it/langages-et-systemes.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Les livrables",permalink:"/developpement-dun-projet-it/livrables"},next:{title:"L'architecture d'une solution informatique",permalink:"/developpement-dun-projet-it/architecture/"}},o={},u=[{value:"Les langages interpr\xe9t\xe9s et compil\xe9s",id:"les-langages-interpr\xe9t\xe9s-et-compil\xe9s",level:2},{value:"Les syst\xe8mes informatiques",id:"les-syst\xe8mes-informatiques",level:2},{value:"L&#39;exception du low code et du no code",id:"lexception-du-low-code-et-du-no-code",level:2},{value:"Suivants",id:"suivants",level:2}],p={toc:u},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"langages-et-syst\xe8mes-informatiques"},"Langages et syst\xe8mes informatiques"),(0,r.kt)("p",null,"Les syst\xe8mes et les langages informatiques sont les mat\xe9riaux de base de la construction d'un b\xe2timent, car ils viennent litt\xe9ralement supporter la mise en oeuvre de votre \xe9difice. Chaque ligne de code produite viendra augmenter les fonctionnalit\xe9s de votre application ou par analogie, la taille de votre immeuble. "),(0,r.kt)("p",null,"Comme pour tout langage, il y a celui qui le parle et celui qui l'\xe9coute. Chaque langage \xe0 sa sp\xe9cificit\xe9, de m\xeame que celui qui l'\xe9coute \xe0 sa mani\xe8re de l'interpr\xe9ter. Les caract\xe9ristiques d'un langage d\xe9finie ce que l'on peut faire avec, \xe0 l'instar du bois qui sera chaud et souple et le b\xe9ton qui sera froid et ultra r\xe9sistant. En outre, chaque mat\xe9riau \xe0 son sp\xe9cialiste, voir son corps de m\xe9tier, comme c'est le cas pour le domaine informatique. "),(0,r.kt)("p",null,"En plus des langages comme mat\xe9riaux de base, il y a aussi les syst\xe8mes informatiques. Certains sont annexes, comme la base de donn\xe9es, d'autres sont des supports, comme le syst\xe8me d'exploitation. Pour reprendre l'analogie du b\xe2timent, les services annexes seraient comparable, \xe0 la t\xe9l\xe9distribution, l'acc\xe8s Internet ou encore \xe0 la distribution d'eau et d'\xe9lectricit\xe9. Chacun de ces services est utilis\xe9 au travers d'une interface : la box pour la t\xe9l\xe9, et les compteurs pour l'eau ou l'\xe9lectricit\xe9. De m\xeame, pour ce qui concerne les syst\xe8mes de support, ils seraient comparables aux mat\xe9riaux fabriqu\xe9s en dehors du chantier, comme le b\xe9ton, qui arrive tout fait de mani\xe8re \xe0 \xeatre pos\xe9 pour garantir la base du b\xe2timent : la chape. De mani\xe8re intuitive, on se rend compte que les syst\xe8mes vous facilitent la t\xe2che, car ils sont d\xe9j\xe0 fabriqu\xe9s et sont pr\xeats \xe0 \xeatre utilis\xe9s, mais, d'un autre point de vue, ceux-ci vous posent \xe9galement des contraintes, car il faut s'y raccorder selon leurs interfaces et il n'est pas possible d'en changer ou d'\xe9tendre les sp\xe9cificit\xe9s (la taille, les fonctionnalit\xe9s, etc.)."),(0,r.kt)("h2",{id:"les-langages-interpr\xe9t\xe9s-et-compil\xe9s"},"Les langages interpr\xe9t\xe9s et compil\xe9s"),(0,r.kt)("p",null,"Dans le cadre d'un langage informatique, il y a deux mani\xe8res de l'\"\xe9couter\" : la mani\xe8re interpr\xe9t\xe9e et la mani\xe8re compil\xe9e."),(0,r.kt)("p",null,"Dans le cas d'un langage interpr\xe9t\xe9, celui qui \"\xe9coute\" le langage va directement ex\xe9cuter les op\xe9rations selon son interpr\xe9tation. Ces langages sont dits \"simple\", car on appr\xe9hende leur impl\xe9mentation de mani\xe8re s\xe9quentielle (du haut vers le bas), c'est-\xe0-dire comme une proc\xe9dure ou une suite d'action que l'on ex\xe9cute, ou encore comme une recette de cuisine. Typiquement, on retrouve ce type de langage dans le cadre des applications frontend de type web et la raison en est simple : les applications \xe9crites dans un langage interpr\xe9t\xe9 ne doivent pas \xeatre install\xe9es ! Seul l'interpr\xe9teur doit l'\xeatre et dans le cas des applications web, il s'agit du navigateur. N\xe9anmoins ces langages offrent des performances et des fonctionnalit\xe9s limit\xe9es, tributaires de l'interpr\xe9teur. Imaginez-vous que l'interpr\xe9teur de votre recette de p\xe2tes \xe0 la bolognaise est un \xe9tudiant fraichement sorti de rh\xe9torique, la qualit\xe9 de la d\xe9gustation sera forc\xe9ment moindre que s'il s'agit d'un chef \xe9toil\xe9."),(0,r.kt)("p",null,"En ce qui concerne les langages compil\xe9s, il existe une \xe9tape interm\xe9diaire dite de compilation. Celle-ci va produire ce que l'on appelle le fichier binaire. Celui-ci contient, non plus des lignes de codes, mais une suite de z\xe9ros et de uns, destin\xe9e \xe0 \xeatre interpr\xe9t\xe9, cette fois-ci, directement par le processeur de la machine (au travers du syst\xe8me d'exploitation). Par cons\xe9quent, on va directement discuter avec l'ordinateur pour ex\xe9cuter des commandes et exploiter toutes les ressources de cet ordinateur : l'\xe9cran, l'imprimante, le disque dur, etc. Ces langages sont plus complexes, car ils utilisent des fonctionnalit\xe9s plus avanc\xe9es et utilisent notamment le paradigme de l'orient\xe9 objet. En outre, ils offrent des performances nettement meilleures. On retrouvera donc ce type de langage pour des syst\xe8mes backend qui, par nature, devront traiter une grande quantit\xe9 d'informations dans un laps de temps restreint."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\xc0 noter qu'auparavant, il existait un d\xe9savantage aux langages compil\xe9 : la portabilit\xe9. En effet tous les ordinateurs ne sont pas compos\xe9s des m\xeames processeurs. Par cons\xe9quent, ceux-ci n'\xe9taient pas en mesure d'\"\xe9couter le code\" de la m\xeame mani\xe8re. Ce d\xe9savantage a aujourd'hui disparu, gr\xe2ce \xe0 l'apparition des machines virtuelles, qui servent litt\xe9ralement de traducteurs entre les commandes envoy\xe9es par l'application, et l'ex\xe9cution de celle-ci dans l'architecture syst\xe8me de l'ordinateur.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Le paradigme (ou concept) de l'orient\xe9 object consiste \xe0 composer les applications de modules autonomes ayant des propri\xe9t\xe9s et des comportements sp\xe9cifiques. Ces modules, appel\xe9 ",(0,r.kt)("inlineCode",{parentName:"p"},"class"),", vont interagir ensemble. Ainsi une ",(0,r.kt)("em",{parentName:"p"},"class")," ",(0,r.kt)("inlineCode",{parentName:"p"},"utilisateur")," va ",(0,r.kt)("inlineCode",{parentName:"p"},"cr\xe9er")," un nouveau ",(0,r.kt)("inlineCode",{parentName:"p"},"dossier")," avec comme ",(0,r.kt)("inlineCode",{parentName:"p"},"identifiant")," : 045/78AE, o\xf9 la ",(0,r.kt)("em",{parentName:"p"},"class")," ",(0,r.kt)("inlineCode",{parentName:"p"},"dossier")," aura comme propri\xe9t\xe9 l'",(0,r.kt)("inlineCode",{parentName:"p"},"identifiant")," et comme comportement ",(0,r.kt)("inlineCode",{parentName:"p"},"cr\xe9er"),".")),(0,r.kt)("p",null,"Ci-dessous vous pouvez retrouver la liste des langages les plus utilis\xe9s, s'ils sont interpr\xe9t\xe9s ou compil\xe9s et leurs utilisations backend ou frontend."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Language"),(0,r.kt)("th",{parentName:"tr",align:null},"Int. / Comp."),(0,r.kt)("th",{parentName:"tr",align:null},"Back / Front"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Javascript"),(0,r.kt)("td",{parentName:"tr",align:null},"Interpr\xe9t\xe9"),(0,r.kt)("td",{parentName:"tr",align:null},"Frontend / Backend (via next.js)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"HTML/CSS"),(0,r.kt)("td",{parentName:"tr",align:null},"Interpr\xe9t\xe9"),(0,r.kt)("td",{parentName:"tr",align:null},"Frontend")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SQL"),(0,r.kt)("td",{parentName:"tr",align:null},"Interpr\xe9t\xe9"),(0,r.kt)("td",{parentName:"tr",align:null},"Backend")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Python"),(0,r.kt)("td",{parentName:"tr",align:null},"Interpr\xe9t\xe9"),(0,r.kt)("td",{parentName:"tr",align:null},"Backend / Frontend via un le framework PyScript")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TypeScript"),(0,r.kt)("td",{parentName:"tr",align:null},"Interpr\xe9t\xe9"),(0,r.kt)("td",{parentName:"tr",align:null},"Frontend (doit \xeatre transpil\xe9 avant d'\xeatre interpr\xe9t\xe9)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Java"),(0,r.kt)("td",{parentName:"tr",align:null},"Compil\xe9"),(0,r.kt)("td",{parentName:"tr",align:null},"Backend / Frontend via un framework")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"C#"),(0,r.kt)("td",{parentName:"tr",align:null},"Compil\xe9"),(0,r.kt)("td",{parentName:"tr",align:null},"Backend")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"PHP"),(0,r.kt)("td",{parentName:"tr",align:null},"Interpr\xe9t\xe9"),(0,r.kt)("td",{parentName:"tr",align:null},"Backend / Frontend")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Razor"),(0,r.kt)("td",{parentName:"tr",align:null},"Compil\xe9"),(0,r.kt)("td",{parentName:"tr",align:null},"Frontend")))),(0,r.kt)("h2",{id:"les-syst\xe8mes-informatiques"},"Les syst\xe8mes informatiques"),(0,r.kt)("p",null,"Si les langages permettent de fa\xe7onner une application, les syst\xe8mes permettent eux d'utiliser des fonctionnalit\xe9s pr\xe9fabriqu\xe9es de mani\xe8re \xe0 ne pas r\xe9inventer la roue et augmenter l'industrialisation des applications. Pour reprendre le parall\xe8le avec le b\xe2timent, soit on fabrique un \xe9vier, soit on en ach\xe8te un mod\xe8le qui r\xe9pond aux contraintes tant techniques qu'esth\xe9tiques. "),(0,r.kt)("p",null,"Dans ce dernier exemple, on se rend bien compte que la production d'\xe9vier est suffisamment sp\xe9cifique et difficile que pour ne pas faire le choix de le fabriquer \"soit m\xeame\", mais au contraire, de faire appel \xe0 des soci\xe9t\xe9s qui sont sp\xe9cialis\xe9es dans ce domaine. C'est la m\xeame probl\xe9matique dans le monde de l'informatique. Certaines fonctionnalit\xe9s sont \xe0 ce point sp\xe9cifiques et complexes, que l'on va pr\xe9f\xe9rer d\xe9l\xe9guer la r\xe9alisation \xe0 des soci\xe9t\xe9s tierces, qui fournissent des produits tout faits, que l'on va int\xe9grer \xe0 la solution informatique. C'est par exemple le cas du syst\xe8me de gestion de base de donn\xe9es (SGBD), \xe0 qui est d\xe9l\xe9gu\xe9e la gestion des donn\xe9es produite et manipul\xe9 par une application. "),(0,r.kt)("h2",{id:"lexception-du-low-code-et-du-no-code"},"L'exception du low code et du no code"),(0,r.kt)("p",null,"Construire une maison sur mesure \xe7a coute cher, alors certains imaginent des solutions pour r\xe9duire les co\xfbts et fournissent d\xe8s lors des solutions \"pr\xe9fabriqu\xe9\". Que ce soit en kit ou sur plan, l'objectif est de r\xe9duire au maximum la phase de fa\xe7onnage en proposant par exemple des murs pr\xe9fabriqu\xe9s (en bois ou en b\xe9ton), des escaliers pr\xe9fabriqu\xe9s, voir m\xeame des maisons pr\xe9fabriqu\xe9es comme le sont les mobil-homes. Ces techniques permettent de r\xe9duire drastiquement les co\xfbts, car tout a d\xe9j\xe0 \xe9t\xe9 \xe9tudi\xe9, et les pi\xe8ces pr\xe9fabriqu\xe9es sont pens\xe9es de mani\xe8re \xe0 facilement s'emboiter, par cons\xe9quent la main-d'\u0153uvre li\xe9e \xe0 la construction est fortement r\xe9duite."),(0,r.kt)("p",null,"Il en va de m\xeame avec l'informatique, le low code ou le no code respecte le m\xeame principe d'\xe9l\xe9ment pr\xe9fabriqu\xe9, que l'on peut appeler blocs applicatifs (en r\xe9f\xe9rence \xe0 une brique), chacun ayant une fonctionnalit\xe9 plus ou moins \xe9labor\xe9e, et qui vont s'imbriquer les un aux autres, dans un flux ou processus, avec des param\xe8tres en entr\xe9e et des r\xe9sultats en sorties, r\xe9sultats qui pourront \xeatre utilis\xe9s par d'autres blocs applicatifs et ainsi de suite. "),(0,r.kt)("p",null,"N\xe9anmoins ce principe comporte des limitations telles qu'il n'est pas possible de sortir du cadre de ce qui a \xe9t\xe9 \xe9tudi\xe9 \xe0 la base et par cons\xe9quent, ne pas correspondre aux besoins du projet. "),(0,r.kt)("h2",{id:"suivants"},"Suivants"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"architecture.md"},"L'architecture d'un syst\xe8me"))))}c.isMDXComponent=!0}}]);